-- This file is part of the YASMINE distribution
-- (c) 2011-2016 M. Pensallorto < marco DOT pensallorto AT gmail DOT com >
--
-- This example proves the Herschel graph has no hamiltonian cycles.
-- The GOAL defined in this model is expected to be UNREACHABLE.
--
-- e. g.
-- >> reach GOAL
-- << Target is UNREACHABLE
--
MODULE herschel;

@inertial
VAR
  vertex: { NIL, a, b, c, d, e, f, g, h, i, j, k };
  visited: boolean[11];

INIT
  vertex = NIL;

INIT
  visited = [ FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE ];

@hidden
DEFINE
  GOAL :=
       visited = [ TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE ];

-- won't visit already visited vertexes
INVAR
  ! case vertex = a: visited[0];
         vertex = b: visited[1];
         vertex = c: visited[2];
         vertex = d: visited[3];
         vertex = e: visited[4];
         vertex = f: visited[5];
         vertex = g: visited[6];
         vertex = h: visited[7];
         vertex = i: visited[8];
         vertex = j: visited[9];
         vertex = k: visited[10];
         else: FALSE;
    end;

-- mark chosen vertex as visited
TRANS vertex = a ?: visited[0] := TRUE;
TRANS vertex = b ?: visited[1] := TRUE;
TRANS vertex = c ?: visited[2] := TRUE;
TRANS vertex = d ?: visited[3] := TRUE;
TRANS vertex = e ?: visited[4] := TRUE;
TRANS vertex = f ?: visited[5] := TRUE;
TRANS vertex = g ?: visited[6] := TRUE;
TRANS vertex = h ?: visited[7] := TRUE;
TRANS vertex = i ?: visited[8] := TRUE;
TRANS vertex = j ?: visited[9] := TRUE;
TRANS vertex = k ?: visited[10] := TRUE;

-- pick next vertex
TRANS
  vertex = NIL ?:
         vertex := { a, b, c, d, e, f, g, h, i, j, k };

TRANS
  vertex = a ?:
         vertex := { b, c, d, e };

TRANS
  vertex = b ?:
         vertex := { a, f, i };

TRANS
  vertex = c ?:
         vertex := { a, f, g };

TRANS
  vertex = d ?:
         vertex := { a, g, h };

TRANS
  vertex = e ?:
         vertex := { a, h, i };

TRANS
  vertex = f ?:
         vertex := { b, c, j, k };

TRANS
  vertex = g ?:
         vertex := { c, d, k };

TRANS
  vertex = h ?:
         vertex := { d, e, j, k };

TRANS
  vertex = i ?:
         vertex := { b, e, j };

TRANS
  vertex = j ?:
         vertex := { f, h, i };

TRANS
  vertex = k ?:
         vertex := { f, g, h };
