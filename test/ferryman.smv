MODULE main

VAR
        ferryman : { EAST, WEST };
        goat     : { EAST, WEST };
        cabbage  : { EAST, WEST };
        wolf     : { EAST, WEST };
        carry    : { NIL, GOAT, CABBAGE, WOLF };

INIT
        ferryman = WEST;

INIT
        goat = WEST;

INIT
        cabbage = WEST;

INIT
        wolf = WEST;

INIT
        carry = NIL;

INVAR
        ferryman != cabbage -> goat != cabbage;

INVAR
        ferryman != goat -> wolf != goat;

TRANS
        -- non-deterministic choice
        next(carry)   = {(ferryman = goat    ? GOAT    : NIL),
                         (ferryman = cabbage ? CABBAGE : NIL),
                         (ferryman = wolf    ? WOLF    : NIL)};
TRANS
        next(goat) = ( next(carry) = GOAT ? next(ferryman) : goat );

TRANS
        next(cabbage) = ( next(carry) = CABBAGE ? next(ferryman) : cabbage );

TRANS
        next(wolf) = ( next(carry) = WOLF ? next(ferryman) : wolf );

-- To perform planning, we assert the negation of the desired GOAL.
-- To solve the ferryman problem in this model try this:

-- >> check_invar ! GOAL
DEFINE GOAL := cabbage = EAST && goat = EAST && wolf = EAST;
